apiVersion: v1
kind: Service
metadata:
  name: kcp
spec:
  type: ClusterIP
  selector:
    app: kcp
  ports:
    - name: web
      port: 6443
      targetPort: web
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kcp
spec:
  selector:
    matchLabels:
      app: kcp
  serviceName: kcp
  template:
    metadata:
      labels:
        app: kcp
    spec:
      initContainers:
        - name: cert-bundle
          image: "${actions.build.kcpctl.outputs.deployment-image-id}"
          command:
            - /bin/sh
          args:
            - -cxe
            - |
              cat /etc/kcp-certificate/tls.crt /etc/kcp-certificate/ca.crt > /data/tls-bundle.crt || true
          volumeMounts:
            - name: data
              mountPath: /data
            - name: kcp-certificate
              mountPath: /etc/kcp-certificate
      containers:
        - name: kcp
          image: ghcr.io/kcp-dev/kcp:530d15f
          args:
            - start
            - --root-directory=/data
            - --external-hostname=kcp
            - --tls-cert-file=/data/tls-bundle.crt
            - --tls-private-key-file=/etc/kcp-certificate/tls.key
            - --client-ca-file=/etc/kcp-certificate/ca.crt
          ports:
            - name: web
              containerPort: 6443
          volumeMounts:
            - name: data
              mountPath: /data
            - name: kcp-certificate
              mountPath: /etc/kcp-certificate
      securityContext:
        fsGroup: 65532
      volumes:
        - name: kcp-certificate
          secret:
            secretName: kcp-server
        - name: data
          persistentVolumeClaim:
            claimName: kcp-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kcp-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kcp
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: "kcp.${var.base-hostname}"
      http:
        paths:
          - backend:
              service:
                name: kcp
                port:
                  number: 6443
            path: /
            pathType: Prefix
